export const type=t=>Object.prototype.toString.call(t).split(" ")[1].slice(0,-1).toLowerCase();const Type=type;export const define=(t,e)=>null!=t?t:null!=e?e:[];export const check=(t,e,r)=>(e=isString(e)?e.toLowerCase():"array",Type(t)===e?t:null!=r?r:"object"===e?{}:"array"===e?[]:null);export const contains=(t,e)=>{if(isString(t)&&isString(e))return t.toUpperCase().includes(e.toUpperCase());if(isArray(t)){let r=isString(e)?e.toUpperCase():e;for(let e=0;e<t.length;e++){if((isString(t[e])?t[e].toUpperCase():t[e])===r)return!0}}return!1};export const isString=t=>"string"===type(t);export const isUnemptyString=t=>isString(t)&&""!==t;export const isUString=isUnemptyString;export const isEquivalent=(t,e)=>!(!isString(t)||!isString(e))&&t.toUpperCase()===e.toUpperCase();export const isSimilar=(t,e)=>{let r=isNumber(t)?String(t):t,i=isNumber(e)?String(e):e;return!(!isString(r)||!isString(i))&&r.toUpperCase()===i.toUpperCase()};export const isBoolean=t=>"boolean"===type(t);export const isRegExp=t=>"regexp"===type(t);export const isEmail=t=>isString(t)&&/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(t);export const test=(t,e)=>!(!isUString(t)||!isRegExp(e))&&e.test(t);export const oneOf=(t,e)=>{if(!isString(t))return!1;if(isArray(e))for(var r=0;r<e.length;r++){if(isRegExp(e[r])&&e[r].test(t))return!0;if(isString(e[r])&&e[r]===t)return!0}return!1};export const allOf=(t,e)=>{if(!isString(t)||!isUArray(e))return!1;for(var r=0,i=0;i<e.length;i++)isRegExp(e[i])&&e[i].test(t)?r+=1:isString(e[i])&&e[i]===t&&(r+=1);return r===e.length};export const isDayOfWeek=t=>oneOf(t,[/monday/i,/tuesday/i,/wednesday/i,/thursday/i,/friday/i,/saturday/i,/sunday/i])||oneOf(t,[/mon/i,/tues/i,/wed/i,/thurs/i,/fri/i,/sat/i,/sun/i]);export const isNumber=t=>"number"===type(t);export const isObject=t=>"object"===type(t);export const isUnemptyObject=t=>isObject(t)&&Object.entries(t).length>0;export const isUObject=isUnemptyObject;export const isArray=t=>"array"===type(t);export const isUnemptyArray=t=>isArray(t)&&t.length>0;export const isUArray=isUnemptyArray;export const get=(t,e,r)=>isNumber(e)&&e<t.length&&e>=0?t[e]:null!=r?r:null;export const derive=t=>e=>{let r=null;for(let i in t){let s=t[i],n=i;if(s.includes(".")){let[t,e]=s.split(".");s=t,n=e}s in e&&(null===r&&(r={}),r[i]=e[s][n])}return r};